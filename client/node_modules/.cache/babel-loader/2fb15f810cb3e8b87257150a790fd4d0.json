{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorphun/Documents/GitHub/cis550-group2/client/src/components/Components.js\";\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nexport const Category = props => {\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: {\n      labels: props.labels,\n      colors: [\"#378aff\", \"#fba330\", \"#f54f52\", \"#92f03b\", \"#9552ea\", \"#0c3f5c\", \"#58508d\", \"#bc5090\", \"#fb6361\", \"#fba600\", \"#c608d1\", \"#fe02fe\", \"#fe77fd\", \"#fea9fd\", \"#2900a5\"]\n    },\n    series: props.series,\n    type: \"pie\",\n    height: props.height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Category;\nexport const RevenueBar = props => {\n  var labelFormatter = function (value) {\n    var val = Math.abs(value);\n\n    if (val >= 1000) {\n      val = (val / 1000).toFixed(2) + \"k\";\n    }\n\n    return val;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"h5\",\n      children: \"Yearly Change \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: {\n        chart: {\n          type: 'line'\n        },\n        stroke: {\n          width: [4, 4, 4]\n        },\n        colors: [\"#fbbc45\", \"#40a0fc\", \"#37e7a5\"],\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: []\n        },\n        labels: props.labels,\n        xaxis: {\n          type: \"category\"\n        },\n        yaxis: [{\n          min: 70,\n          max: 200,\n          opposite: true,\n          tickAmount: 4,\n          seriesName: \"Individual Rate\"\n        }, {\n          min: 10000,\n          max: 32000,\n          seriesName: \"Plan Num\",\n          tickAmount: 4,\n          labels: {\n            formatter: labelFormatter\n          }\n        }, {\n          seriesName: \"Issuer-Network Num\",\n          show: false\n        }]\n      },\n      series: [{\n        name: 'Individual Rate',\n        type: 'line',\n        data: props.individualRate\n      }, {\n        name: 'Plan Num',\n        type: 'column',\n        data: props.planNum\n      }, {\n        name: 'Issuer-Network Num',\n        type: 'column',\n        data: props.issuerNetworkNum\n      }],\n      type: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c2 = RevenueBar;\nexport const SalaryBar = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"h5\",\n      children: \"Plan Number VS State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: {\n        chart: {\n          type: 'line'\n        },\n        colors: [\"#43335a\"],\n        dataLabels: {\n          enabled: false,\n          enabledOnSeries: [0]\n        },\n        labels: props.labels,\n        xaxis: {\n          type: 'Plan Num'\n        },\n        yaxis: [{\n          min: 2000,\n          max: 7500,\n          tickAmount: 6,\n          seriesName: \"Salary\"\n        }]\n      },\n      series: [{\n        name: 'Salary',\n        type: 'column',\n        data: props.salaryData\n      }],\n      type: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_c3 = SalaryBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"RevenueBar\");\n$RefreshReg$(_c3, \"SalaryBar\");","map":{"version":3,"sources":["/Users/victorphun/Documents/GitHub/cis550-group2/client/src/components/Components.js"],"names":["React","Chart","Category","props","labels","colors","series","height","RevenueBar","labelFormatter","value","val","Math","abs","toFixed","chart","type","stroke","width","dataLabels","enabled","enabledOnSeries","xaxis","yaxis","min","max","opposite","tickAmount","seriesName","formatter","show","name","data","individualRate","planNum","issuerNetworkNum","SalaryBar","salaryData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nexport const Category = (props) => {\n    return (\n        <Chart\n            options=  {{\n                labels: props.labels,\n                colors: [\"#378aff\", \"#fba330\", \"#f54f52\", \"#92f03b\", \"#9552ea\",\n                    \"#0c3f5c\", \"#58508d\", \"#bc5090\", \"#fb6361\", \"#fba600\",\n                    \"#c608d1\", \"#fe02fe\", \"#fe77fd\", \"#fea9fd\", \"#2900a5\"\n                ]\n            }}\n            series={props.series}\n            type=\"pie\"\n            height={props.height}\n        />\n    );\n};\n\nexport const RevenueBar = (props) => {\n\n    var labelFormatter = function(value) {\n        var val = Math.abs(value);\n        if (val >= 1000) {\n            val = (val / 1000).toFixed(2) + \"k\";\n        }\n        return val;\n    };\n\n\n\n    return (\n        <div>\n            <h3 className=\"h5\">Yearly Change </h3>\n            <Chart\n                options= {{\n                    chart: {\n                        type: 'line',\n                    },\n                    stroke: {\n                        width: [4, 4, 4],\n                    },\n                    colors: [\"#fbbc45\", \"#40a0fc\", \"#37e7a5\"],\n                    dataLabels: {\n                        enabled: true,\n                        enabledOnSeries: []\n                    },\n                    labels: props.labels,\n                    xaxis: {\n                        type: \"category\",\n                    },\n                    yaxis: [\n                        {\n                          min: 70,\n                          max: 200,\n                          opposite: true,\n                          tickAmount: 4,\n                          seriesName: \"Individual Rate\",\n                        },\n                        {\n                          min: 10000,\n                          max: 32000,\n                          seriesName: \"Plan Num\",\n                          tickAmount: 4,\n                          labels: {\n                            formatter: labelFormatter,\n                          }\n                        },\n                        {\n                          seriesName: \"Issuer-Network Num\",\n                          show: false,\n                        },\n                    ]\n                }}\n                series={[\n                    {\n                        name: 'Individual Rate',\n                        type: 'line',\n                        data: props.individualRate\n                    },\n                    {\n                        name: 'Plan Num',\n                        type: 'column',\n                        data: props.planNum\n                    },{\n                        name: 'Issuer-Network Num',\n                        type: 'column',\n                        data: props.issuerNetworkNum\n                    },\n                ]}\n                type=\"line\"\n            />\n        </div>\n    );\n}\n\nexport const SalaryBar = (props) => {\n\n    return (\n        <div>\n            <h3 className=\"h5\">Plan Number VS State</h3>\n            <Chart\n                options= {{\n                    chart: {\n                        type: 'line',\n                    },\n                    colors: [\"#43335a\"],\n                    dataLabels: {\n                        enabled: false,\n                        enabledOnSeries: [0]\n                    },\n                    labels: props.labels,\n                    xaxis: {\n                        type: 'Plan Num'\n                    },\n                    yaxis: [\n                        {\n                          min: 2000,\n                          max: 7500,\n                          tickAmount: 6,\n                          seriesName: \"Salary\",\n                        }\n                    ]\n                }}\n                series={[\n                    {\n                        name: 'Salary',\n                        type: 'column',\n                        data: props.salaryData\n                    }\n                ]}\n                type=\"line\"\n            />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}